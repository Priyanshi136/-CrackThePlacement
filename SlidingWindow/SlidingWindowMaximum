public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> slidingMaximum(final List<Integer> A, int B) {
        
        ArrayList<Integer> ret = new ArrayList<>();
        Deque<Integer> q = new LinkedList<>(); // for storing maximum every time.
        
        int i = 0;
        int j = 0;
        while(j < A.size()){
            while(!q.isEmpty()){
                if(A.get(j) > q.getLast()){ 
                    q.pollLast();
                }else{
                    break;
                }
            }
            q.addLast(A.get(j));
            
            if(j-i+1 < B){
                j++;
            }else{
                ret.add(q.peek());
                if(q.peekFirst() == A.get(i)){
                    q.pollFirst();
                }
                i++;
                j++;
            }
        }
        return ret;
    }
}
