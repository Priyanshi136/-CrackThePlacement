/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        
         // using two pointers and dummy nodes.
        // time-> O(N), space-> O(1).
        ListNode temp = head;
        ListNode temp1 = null;
        ListNode temp2 = temp1;
        
        if(temp.val >= x){
            temp1 = head;
            temp2 = temp1;
            head = temp.next;
        }
        
        while(temp != null && temp.next != null){
            if(temp.next.val >= x){
                if(temp1 == null){
                    temp1 = temp.next;
                    temp2 = temp1;
                }else{
                    temp1.next = temp.next;
                }
                temp.next = temp.next.next;
                temp = temp.next;
                temp1 = temp1.next;
                temp1.next = null;
            }
        }
        
        temp.next = temp2;
        return head;
    }
}
