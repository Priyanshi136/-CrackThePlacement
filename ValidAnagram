class Solution {
    public boolean isAnagram(String s, String t) {
        
        // M-1 Brute force, using sorting. Hence time-> O(nlogn), space-> O(n).
//         char[] arr1 = s.toCharArray();
//         Arrays.sort(arr1);
//         s = String.valueOf(arr1);
        
//         char[] arr2 = t.toCharArray();
//         Arrays.sort(arr2);
//         t = String.valueOf(arr2);
        
//         return s.equals(t);
        
        
        // M-2 Optimized approach, by maintaining an array for all characters.
        // Hence time-> O(n) and space-> O(n);
        int freq[] = new int[26];
        
        for(char c : s.toCharArray()){
            freq[c- 'a']++;
        }
        
        for(char c : t.toCharArray()){
            freq[c- 'a']--;
        }
        
        for(int i = 0; i < 26; i++){
            if(freq[i] != 0){
                return false;
            }
        }
        
        return true;
    }
}
